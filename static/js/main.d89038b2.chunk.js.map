{"version":3,"sources":["logo.svg","Components/Navbar.js","Components/Section.js","Components/Card.js","Components/Projects.js","Components/Contact.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","Navbar","scrollToTop","scroll","react_default","a","createElement","className","id","onClick","this","modules","activeClass","to","spy","smooth","offset","duration","Component","Section","_this$props","props","title","subtitle","dark","style","background","margin","paddingTop","textAlign","children","Square","squareStyle","display","height","concat","imgUrl","backgroundColor","titleStyle","color","padding","Label","fontFamily","fontWeight","text","Card","getHeight","_this","state","width","cardStyle","marginRight","marginBottom","float","Card_Square","Card_Label","Projects","overflow","Components_Card","Contact","minHeight","App","Navbar_Navbar","Components_Section","Components_Projects","Components_Contact","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.d89038b2.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.ee7cd8ed.svg\";","import React, { Component } from \"react\";\r\nimport logo from \"../logo.svg\";\r\nimport { Link, animateScroll as scroll } from \"react-scroll\";\r\n\r\nexport default class Navbar extends Component {\r\n  scrollToTop = () => {\r\n    scroll.scrollToTop();\r\n  };\r\n\r\n\r\n\r\n  render() {\r\n    return (\r\n      <nav className=\"nav\" id=\"navbar\">\r\n        <div className=\"nav-content\">\r\n         \r\n          <h3 className=\"nav-logo\" onClick={this.scrollToTop}>Sander Vermeer</h3>\r\n          <ul className=\"nav-items\">\r\n            \r\n            \r\n            <li className=\"nav-item\">\r\n              <Link\r\n                activeClass=\"active\"\r\n                to=\"projectsSection\"\r\n                spy={true}\r\n                smooth={true}\r\n                offset={-150}\r\n                duration={500}\r\n              >\r\n                Projects\r\n              </Link>\r\n            </li>\r\n\r\n            <li className=\"nav-item\">\r\n              <Link\r\n                activeClass=\"active\"\r\n                to=\"contactSection\"\r\n                spy={true}\r\n                smooth={true}\r\n                offset={-150}\r\n                duration={500}\r\n              >\r\n                Contact\r\n              </Link>\r\n            </li>\r\n          </ul>\r\n        </div>\r\n      </nav>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\n\r\n\r\nclass Section extends Component {\r\n  render() {\r\n    const {title, subtitle, dark, id} = this.props;\r\n\r\n    const headerStyle = {\r\n      background: 'linear-gradient(to bottom, rgba(220, 220, 220, 0) 0%, rgba(220, 220, 220, 0) 82%, gold 82%, gold 100%)',\r\n      margin: 0, \r\n      paddingTop: 60, \r\n      textAlign: 'center'\r\n    };\r\n\r\n    return (\r\n      <div className={\"section\" + (dark ? \" section-dark\" : \"\")}>\r\n        <h1 style={headerStyle}>{title}</h1>\r\n      <div className=\"section-content\" id={id}>\r\n        \r\n        <p>{subtitle}</p>\r\n        {this.props.children}\r\n      </div>\r\n    </div>\r\n    )\r\n\r\n  }\r\n}\r\n\r\n\r\nexport default Section;\r\n","import React, { Component } from \"react\";\r\n\r\n\r\nclass Square extends Component {\r\n    render () {\r\n        let squareStyle = {\r\n            display: 'flex',\r\n            height: this.props.height,\r\n            background: `url(${this.props.imgUrl})`,\r\n            backgroundColor: '#FF6663',\r\n        };\r\n\r\n        let titleStyle = {\r\n            color: 'gold',\r\n            padding: `${this.props.height - 60}px 20px`,\r\n            \r\n        };\r\n        return (\r\n            <div style={squareStyle}>\r\n                <h2 style={titleStyle}>Monosynth-1</h2>\r\n            </div>\r\n            \r\n        );\r\n    }\r\n}\r\n\r\nclass Label extends Component {\r\n    render() {\r\n        let labelStyle = {\r\n            fontFamily: \"sans-serif\",\r\n            fontWeight: \"bold\",\r\n            padding: 10,\r\n            margin: 5,\r\n\r\n        };\r\n        return (\r\n            <div style={labelStyle}>{this.props.text}</div>\r\n        );\r\n    }\r\n}\r\n\r\nclass Card extends Component {\r\n\r\n    getHeight = () => {\r\n        return this.state.width + 20\r\n    }\r\n\r\n    state = {\r\n        width: 300,\r\n        height: 350\r\n    };\r\n\r\n    render() {\r\n        let cardStyle = {\r\n            height: this.state.height,\r\n            width: this.state.width,\r\n            padding: '0px 10px',\r\n            marginRight: 20,\r\n            marginBottom: 60,\r\n            backgroundColor: \"#FFF\",\r\n            float: 'left',\r\n            background: \"linear-gradient(to bottom, rgba(220, 220, 220, 0) 0%, rgba(220, 220, 220, 0) 62%, gold 62%, gold 100%)\"\r\n        };\r\n\r\n        return (\r\n            <div style={cardStyle} id={this.props.id} height={this.state.height} width={this.state.width}>\r\n                <Square height={this.state.width} imgUrl=\"./img/monosynth-card.png\" />\r\n                <Label text=\"Project 1\" />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Card;","import React, {Component} from \"react\";\r\nimport Card from \"./Card\";\r\n\r\nclass Projects extends Component {\r\n    render() {\r\n        return (\r\n            <div style={{overflow: 'hidden'}}>\r\n                <Card id=\"card1\" />\r\n                <Card id=\"card2\" />\r\n                <Card id=\"card1\" />\r\n                <Card id=\"card2\" />\r\n                <Card id=\"card1\" />\r\n                <Card id=\"card2\" />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Projects;","import React, {Component} from \"react\";\r\n\r\nclass Contact extends Component {\r\n    render() {\r\n        let contactStyle = {\r\n            minHeight: '500px'\r\n        };\r\n\r\n        return (\r\n            <div style={contactStyle}>\r\n                <h2>Contact info</h2>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Contact;","import React, { Component } from \"react\";\r\nimport \"./App.css\";\r\nimport Navbar from \"./Components/Navbar\";\r\nimport Section from \"./Components/Section\";\r\nimport Projects from \"./Components/Projects\";\r\nimport Contact from \"./Components/Contact\";\r\nimport dummyText from \"./DummyText\";\r\n\r\nconst SectionList = (props) => {\r\n  const sections = [\r\n    { id: \"section1\", title: \"Section 1\", isDark: false },\r\n    \r\n\r\n  ];\r\n\r\n  const items = sections.map( (section) =>\r\n    <Section \r\n      title={section.title}\r\n      subtitle={dummyText}\r\n      dark={section.isDark}\r\n      id={section.id}\r\n      key={section.id}\r\n    />\r\n  );\r\n\r\n  return (\r\n    <React.Fragment>\r\n    {items}\r\n    </React.Fragment>\r\n  );\r\n\r\n}\r\n\r\n\r\nclass App extends Component {\r\n  render() {\r\n    return (\r\n      <div className=\"App\">\r\n        <Navbar />\r\n         \r\n          <Section \r\n            title=\"Projects\"\r\n            dark={true}\r\n            id=\"projectsSection\"\r\n            >\r\n            <Projects />\r\n          </Section>\r\n          <Section \r\n            title=\"Contact\"\r\n            dark={false}\r\n            id=\"contactSection\"\r\n          >\r\n            <Contact />\r\n          </Section>\r\n          <Section\r\n            title=\"\"\r\n            dark={true}\r\n            id=\"dummySection\"\r\n          />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n\r\n/*\r\n        <Section\r\n          title=\"Section 1\"\r\n          subtitle={dummyText}\r\n          dark={true}\r\n          id=\"section1\"\r\n        />\r\n        <Section\r\n          title=\"Section 2\"\r\n          subtitle={dummyText}\r\n          dark={false}\r\n          id=\"section2\"\r\n        />\r\n        <Section\r\n          title=\"Section 3\"\r\n          subtitle={dummyText}\r\n          dark={true}\r\n          id=\"section3\"\r\n        />\r\n        <Section\r\n          title=\"Section 4\"\r\n          subtitle={dummyText}\r\n          dark={false}\r\n          id=\"section4\"\r\n        />\r\n        <Section\r\n          title=\"Section 5\"\r\n          subtitle={dummyText}\r\n          dark={true}\r\n          id=\"section5\"\r\n        />\r\n  */","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read http://bit.ly/CRA-PWA.\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      if (\r\n        response.status === 404 ||\r\n        response.headers.get('content-type').indexOf('javascript') === -1\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n            <App />\r\n    , \r\n    document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: http://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}